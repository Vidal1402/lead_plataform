const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000/api';

// Fun√ß√£o para fazer login e obter token
async function login(email, password) {
  try {
    const response = await axios.post(`${API_BASE_URL}/auth/login`, {
      email,
      password
    });
    return response.data.token;
  } catch (error) {
    console.error(`Erro no login para ${email}:`, error.response?.data || error.message);
    return null;
  }
}

// Fun√ß√£o para obter estat√≠sticas
async function getStats(token) {
  try {
    const response = await axios.get(`${API_BASE_URL}/leads/stats`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    return response.data;
  } catch (error) {
    console.error('Erro ao obter estat√≠sticas:', error.response?.data || error.message);
    return null;
  }
}

// Fun√ß√£o para obter hist√≥rico
async function getHistory(token) {
  try {
    const response = await axios.get(`${API_BASE_URL}/leads/history`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    return response.data;
  } catch (error) {
    console.error('Erro ao obter hist√≥rico:', error.response?.data || error.message);
    return null;
  }
}

// Teste principal
async function testUserSpecificData() {
  console.log('üß™ Testando dados espec√≠ficos por usu√°rio...\n');

  // Teste com usu√°rio que existe (baseado na migra√ß√£o)
  console.log('üë§ Testando Usu√°rio existente...');
  const token = await login('teste@teste.com', 'senha123');
  if (token) {
    const stats = await getStats(token);
    const history = await getHistory(token);
    
    console.log('üìä Estat√≠sticas:', stats?.data?.geral?.totalLeads || 'Erro');
    console.log('üìã Hist√≥rico:', history?.data?.totalSearches || 'Erro');
    
    // Verificar se os dados s√£o espec√≠ficos do usu√°rio
    if (stats?.data?.geral?.totalLeads === 1000) {
      console.log('‚ö†Ô∏è  ATEN√á√ÉO: Ainda retornando dados globais (1000 leads)');
      console.log('‚ùå A corre√ß√£o pode n√£o estar funcionando corretamente');
    } else {
      console.log('‚úÖ Dados espec√≠ficos do usu√°rio funcionando corretamente');
    }
  } else {
    console.log('‚ùå Falha no login');
  }

  console.log('\n‚úÖ Teste conclu√≠do!');
  console.log('üìù Resultado esperado:');
  console.log('   - Usu√°rio deve ver apenas seus pr√≥prios leads');
  console.log('   - N√£o deve mais retornar 1000 leads globais');
  console.log('   - Dados devem ser filtrados por userId');
}

// Executar teste
testUserSpecificData().catch(console.error); 